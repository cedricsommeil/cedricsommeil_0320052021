body{
    margin: 0;
    padding: 0;
    font-family: "roboto", Arial, Helvetica, sans-serif;
}
*{
    box-sizing: border-box;/*permet généralement 
                            de simplifier 
                            la dimensionnement des éléments*/                     
}
/*loader*/
.loader {
  border: 5px solid #f3f3f3;
  border-radius: 50%;
  border-top: 5px solid #9356DC;
  border-bottom: 5px solid #9356DC;
  width:120px;
  height:120px;
  animation: chargement 2s linear;
  animation-fill-mode: forwards;
  /* Fowards :La cible retiendra les valeurs calculées définies lors 
   de la dernière étape (keyframe).
   La dernière étape considérée dépend de la valeur de animation-direction 
   et de animation-iteration-count : */
  margin: auto;
  position: absolute;
  top:0;bottom:0;left:0;right:0;
  z-index: 999;
}

@keyframes chargement {
  0% { transform: rotate(0deg);
       opacity: 1;}
  100% { transform: rotate(360deg); 
         opacity: 0;}
}

/*loader-body*/
.full__screen {
   animation: loader-body 2s 400ms both;
}
@keyframes loader-body {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}


/*première feuille -header-*/
.logo-ohmyfood {
  display:block;
  margin: 20px auto;
  text-align: center;
}
.container_logo img{
  width: 300px;
  margin-left: -28px;
}
.container_logo img:hover{
  transform: scale(1.08);
}
.container{
  width: 96%;            
  margin: 0px auto;
}


/*partie reservez le menu qui convient*/
#research{
  border-top: 2px solid rgb(220, 220, 220);
  width: 100%;
  height: 59px;
  background-color:rgb(234, 234, 234);
  display: flex;
  justify-content: center;
  align-items: center;
}
.titre-recherche{
  font-size: 20px;
  font-weight: bolder;
  color: #000;
  padding-left: 21px;
  margin-top: 14px;
}
.fa-map-marker-alt{
  margin-left: -51px;
}


/*réservation*/
h1{
  margin-top: -1px;
  padding-top: 20px;
  font-size: 35px;
}
h1, .para-titre{
  text-align: center;
}
.para-titre{
  font-size: 20px;
}
.button{
  text-align: center;
  width: 400px;
  height: 57px;
  border-radius: 25px;
  display: inline-block;
  margin-left: 39%;
  margin-bottom: 42px;
  padding-top: 15px;
  /* La fonction CSS linear-gradient() 
  crée une image composée d’une transition progressive 
  entre deux couleurs ou plus le long d’une ligne droite. 
  Son résultat est un objet du type <gradient>data, qui est un type spécial de <image>. */
  background: linear-gradient(to bottom right, #FF79DA, #9356DC);
  filter:brightness(80%);
  transition: filter ease 1s, box-shadow ease 1s;
  cursor:pointer;
}  
/* brightness()
 La fonction permet de modifier la luminosité d'une image grâce à un facteur linéaire. Un argument égal 0% créera une image totalement noire et une valeur de 100% conservera l'image d'entrée telle quelle. Il est possible d'utiliser des valeurs supérieures à 100% afin d'obtenir des images saturées en luminosité.
 La valeur par défaut pour l'argument est 1 */ 
.button:hover{
  filter:brightness(100%);
  box-shadow: 10px 10px 33px -12px rgba(0, 0, 0, 0.75);
}
.button-recherche {
  color: white;
  font-weight: bold;
  font-size: 18px;
}
.reserver{
  width: 100%;
  background-color:rgb(246, 246, 246);
}


/*la partie filtres*/
#area-filters{
  margin-bottom: 30px;
}
#area-filters h2{
  margin-left: 19px;
  padding-top: 14px;
  width: 100%;
}
.titre-filtre{
  width: 15%;
  margin-bottom: -12px;
}
.groupe-filter {
  display: flex;
  width: 100%;
  justify-content: center;
  margin-left: -43px;
}
.filter{
  margin-left: 70px;
  padding-right: 15px;
  height: 57px;
  border-radius: 25px;
  box-shadow: 2px 6px 5px #f0f0f0;
  padding-top: 14px;
  margin-top: 25px;
  box-shadow: 0 0 10px grey;  
  cursor: pointer;
}
.filter:hover i{
  color: #9356DC; 
}
.filter:hover{
  background-color:#feedff;
}
.filtre-text:hover{
  color: #000;
}
.number-filter {
  display: inline-block;
  width: 22px;
  background-color: rgb(147, 86, 220);
  border-radius: 50%;
  text-align: center;
  padding-top: 2px;
  color: white;
  margin-left: -7px;
  margin-top: 2px;
}
.wrapper-icon{
  height: 40px;
  width: 40px;
  padding-left: 20px;
}
.filtre-text{
  padding: 60px;
  padding-left: 40px;
  font-weight: bolder;
}


/*les cartes-menus*/
.restaurant{
  background-color: rgb(246, 246, 246);
  padding: 30px;
  margin-bottom: 39px;
}
.restaurant_carte h2{
  margin: 15px 0px;
  padding-left: 5px;
}
.restaurant_carte {
  display: flex;
  margin-left: -44px;
}
.restaurant_carte a {
  width: 25%;
  flex: 1;
  padding: 5px;
}
.restaurant_carte figure:hover{
  box-shadow: 4px 4px 7px 1px rgba(0, 0, 0, 0.50);
}
figure {
  display: flex;
  flex-direction: column;
  height: 350px;
  border-radius: 20px;
  background-color: white;
  box-shadow: 0px 0px 10px  rgba(36, 36, 36, 0.1);
  position: relative;
}
img{
  object-fit: cover;
}
figure img {
  width: 100%;
  height: 60%;
  border-radius: 20px 20px 0 0;
}
figcaption {
  display: flex;
  padding: 16px 0 16px 11px;
  justify-content: space-between;
  align-items: center;
 }
figcaption p {
  margin-top: 5px;
}
.new {
  position: absolute;
  right: 15px;
  top: 15px;
  background-color: #99e2d0;
  color: #008160;
  text-align: center;
  padding: 10px;
  font-weight: bold;
  border-radius: 9px;
}
h4, p{
  color: #000;
}
h4{
  font-size: 20px;
  margin-bottom: 9px;
}
p{
  font-size: 15px;
}


/* les coeurs relatifs aux cartes-menu*/
.coeur {
  position: relative;
  display: inline-block;
  margin-right: 20px;
  margin-left: 7%;
}
.coeur i {
  color: rgb(161, 161, 161);
  font-size: 35px;
}
.coeur .plein {
  left: 0;
  opacity: 0;
  position: absolute;
}

.coeur:hover .vide {
  opacity: 0;
  transition: .5s 0s ease;
}
.coeur:hover .plein {
  z-index: 1000;
  color: #9356dc;
  opacity: 1;
  transition: .5s 0s ease;
} 


/*footer-menu*/
a{
  text-decoration: none;
  color: white;
}
ul li {
  list-style-type: none;
  border-radius: 20px;
  padding: 3px;
  color: white;
}
#footer{
  margin-top: 50px;
  background-color: rgb(53, 53, 53);
  color: white;
  padding: 20px;
 }
.footer .container{
  margin: auto;
}
.logo-footer{ 
  margin-top: 4px;
  margin-left: 38px;
} 
.logo-footer svg path{
  fill:white;
}
svg {
  margin-left: 4px;
}
.list-footer > li > a {
  color: white;
  font-size: 25px;
}
.fa-utensils{
  padding-right: 14px;
}
.fa-hands-helping{
  padding-right: 11px;
}



/*DEUXIEME PAGE DEKSTOP*/
#header-second{
  display: flex;
  justify-content: center;
  padding-top: 15px;
  padding-bottom: 12px;
}
.arrow{
  margin-left: -80px;
}
.fa-arrow-left{
  margin-top: 29px;
  display: inline-block;
  margin-left: -700px;
  font-size: 20px;
  color: #000;
}



/*titre , photo, coeur des pages menu*/
.photo-menu img{
  width: 100%;
  height: 350px;
  object-fit: cover;
}
.titre-restaurant{ 
  display: inline-block;
  padding-left: 39%;
}
.coeur3{
  margin-left: 8%;
}
.titre-second{
  color: #000;
  font-size: 18px;
  margin: 6px;
}

/* les titres des categories proposés dans les pages menu , ainsi que les informations...*/
.title-border{
  font-size: 20px;
  margin-left: 39px;
}
.surligne{
  border-bottom: 2px solid #99E2D0;
  padding-bottom: 6px;
}
.para-second{
  margin: 5px;
}

/*filtres des pages menu */
.filter-second{
  animation-name:slideIn;
  animation-duration: 4s;
}
/* La fonction CSS translate3d() repositionne un élément dans l’espace 3D. 
Son résultat est un type <transform-function>data.
ceci est la syntaxe translate3d(tx, ty, tz) 
tx:
<longueur>ou <centage> représentant l’abscisse du vecteur de translation.
ty:
Longueur <>ou <centage> représentant l’ordonnée du vecteur translation.
tz:
 <longueur> représentant la composante z du vecteur de translation. 
 Il ne peut pas s’agir d’un <pourcentage>valeur; dans ce cas, la propriété contenant 
 la transformation est considérée comme non valide. */
@keyframes slideIn{
  from{
      opacity:0;
      transform:translate3d(0,5px,0);
  }

  to{
      opacity:1;
      transform:translate3d(0,0,0);
  }
 }
.filter-second {
  width: 29%;
  overflow: hidden;
  /* La propriété CSS overflow est une propriété raccourcie qui définit comment gérer le dépassement du contenu d'un élément dans son bloc. Elle définit 
  les valeurs des propriétés overflow-x et overflow-y. 
  la valeur hidden: Le contenu est rogné si besoin pour 
  s'inscrire dans la boîte de remplissage (padding) et aucune barre de défilement n'est affichée. */
  display: flex;
  padding: 5px;
  margin: 10px;
  border-radius: 15px;
  box-shadow: 0px 4px 4px 1px rgb(36 36 36 / 10%);
  margin-left: 35%;
}
.filter-second:hover{
  cursor: pointer;
}
.boite{
  display: flex;
  justify-content: center;
  background-color: #99e2d9;
  align-items: center;
  margin: -8px -95px -9px 15px;
  transition-duration: 0.7s;
  width: 80px;
}
.boite i{
  font-size: 25px;
  color: white;
} 
.filter-second:hover {
  cursor: pointer;
  box-shadow: 4px 4px 7px 1px rgba(0, 0, 0, 0.36);
}
/*La pseudo-classe :active permet de cibler un élément lorsque celui-ci est activé par l'utilisateur. 
  Elle permet de fournir un feedback indiquant que l'activation a bien été détectée par le navigateur. Lorsqu'on a une interaction avec un pointeur, il s'agit généralement du moment entre l'appui sur le pointeur et le relâchement de celui-ci. */
.filter-second:active {
  box-shadow: 4px 4px 7px 1px rgba(0, 0, 0, 0.36);
} 
.filter-second:hover i {
  transform: rotate(1turn);
  transition: 450ms 200ms ease-out;
}
.filter-second:hover .boite {
  margin-right: -10px;
  box-shadow: 4px 4px 7px 1px rgba(0, 0, 0, 0.36);
  cursor: pointer;
}
.text-menu{
  flex: 1;
  /* je vais rajouter, tous ce qui est en dessous de flex:1 est un supplément nouveau,
  La propriété CSS d’espace blanc définit la façon dont l’espace blanc à l’intérieur d’un élément est géré.
  de manière a que l'ecrit devient invisible lors de l'animation , Nowrap: Réduit les espaces blancs comme pour ,
  mais supprime les sauts de ligne (habillage du texte) dans la source.normal*/ 
  white-space: nowrap;
  /* La propriété text-overflow définit la façon dont le contenu textuel qui dépasse d'une boîte est signalé pour les utilisateurs. Le texte peut être rogné 
  (clipping), afficher une ellipse ('…', U+2026 HORIZONTAL ELLIPSIS) ou afficher une chaîne de caractères choisie. et
  et ELLIPSIS:Ce mot-clé indique qu'on affiche une ellipse ('…', U+2026 HORIZONTAL ELLIPSIS) pour représenter le texte rogné. L'ellipse est affichée à l'intérieur de la boîte de contenu et réduit donc la quantité de texte affichée. 
  S'il n'y a pas assez de place pour afficher l'ellipse, celle-ci est rognée*/
  text-overflow: ellipsis;
  overflow: hidden;
 }
.text-menu .titre-second{
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
.text-menu .para-second{
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
.prix-menu {
  align-self: flex-end;
  font-weight: bold;
  padding-bottom: 9px
}

/*bouton en fin de page,  des pages menu*/
.button-deuxieme-page{
  text-align: center;
  height: 57px;
  border-radius: 25px;
  display: inline-block;
  width: 400px;
  margin-left: 40%;
  margin-top: 44px;
  padding-top: 15px;
  background: linear-gradient(to bottom right, #FF79DA, #9356DC);
  filter:brightness(80%);
  transition:filter ease 1s, box-shadow ease 1s;
  cursor:pointer;
}
.button-deuxieme-page:hover{
  filter:brightness(100%);
  box-shadow: 10px 10px 33px -12px rgba(0,0,0,0.75);
}
.commander{
  color: white;
  font-size: 20px;
  font-weight: bold;
}

/*footer des pages menu*/
.fa-utensils, .fa-hands-helping{
  color: white;
}
.list-footer-deuxieme-page > li > a{
  color: white;
  font-size: 25px;
}
.list-footer-deuxieme-page li{
  margin: 6px 0px;
  color: white;
  font-size: 25px;
}

